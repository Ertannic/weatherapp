import 'package:flutter/material.dart';
import '../services/weather_service.dart';
import '../models/weather_model.dart';

class WeatherPage extends StatefulWidget {
  final WeatherService weatherService; // –ü–µ—Ä–µ–¥–∞—ë–º —Å–µ—Ä–≤–∏—Å –≤ —Å—Ç—Ä–∞–Ω–∏—Ü—É

  const WeatherPage({super.key, required this.weatherService});
/* State - –ª–æ–≥–∏–∫–∞, üëâ –≠—Ç–æ –º–µ—Ç–æ–¥, –∫–æ—Ç–æ—Ä—ã–π —Å–æ–∑–¥–∞—ë—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ (State) –¥–ª—è WeatherPage.
üëâ –ö–æ–≥–¥–∞ Flutter —Å–æ–∑–¥–∞—ë—Ç WeatherPage, –æ–Ω –≤—ã–∑—ã–≤–∞–µ—Ç createState(), —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å _WeatherPageState.

üìå –ü—Ä–æ—â–µ –≥–æ–≤–æ—Ä—è:
üìå WeatherPage ‚Äì —ç—Ç–æ –æ–±–æ–ª–æ—á–∫–∞, –∞ _WeatherPageState ‚Äì —ç—Ç–æ –µ–≥–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∏ –ª–æ–≥–∏–∫–∞.
üìå createState() –≥–æ–≤–æ—Ä–∏—Ç Flutter, –∫–∞–∫–æ–π State –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–ª—è —ç—Ç–æ–≥–æ —ç–∫—Ä–∞–Ω–∞.
*/
  @override
  State<WeatherPage> createState() => _WeatherPageState();
}

class _WeatherPageState extends State<WeatherPage> {
  Weather? _weather; // –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–≥–æ–¥–µ
  String _cityName = "Almaty"; // –ì–æ—Ä–æ–¥ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
  bool _isLoading = false; // –§–ª–∞–≥ –∑–∞–≥—Ä—É–∑–∫–∏

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ–≥–æ–¥—ã
  Future<void> _fetchWeather() async {
    /* üìå –ß—Ç–æ –¥–µ–ª–∞–µ—Ç setState()?
‚úî –ì–æ–≤–æ—Ä–∏—Ç Flutter: "–≠–π, –æ–±–Ω–æ–≤–∏ —ç–∫—Ä–∞–Ω!"
‚úî –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç _isLoading = true, —á—Ç–æ–±—ã –ø–æ–∫–∞–∑–∞—Ç—å –∫—Ä—É—Ç—è—â–∏–π—Å—è –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
‚úî –ó–∞–ø—É—Å–∫–∞–µ—Ç –∞–Ω–∏–º–∞—Ü–∏—é CircularProgressIndicator() (–≤ build())

üëâ –ï—Å–ª–∏ –Ω–µ –≤—ã–∑–≤–∞—Ç—å setState(), —Ç–æ UI –Ω–µ –æ–±–Ω–æ–≤–∏—Ç—Å—è –∏ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –Ω–µ –ø–æ—è–≤–∏—Ç—Å—è. */
    setState(() {
      _isLoading = true; // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
    });

    try {
      final weather = await widget.weatherService.getWeather(_cityName); // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–≥–æ–¥—É
      setState(() {
        _weather = weather; // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
      });
    } catch (e) {
      ScaffoldMessenger.of(context).showSnackBar(
        SnackBar(content: Text("–û—à–∏–±–∫–∞: ${e.toString()}")),
      );
    } finally {
      setState(() {
        _isLoading = false; // –ü—Ä—è—á–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
      });
    }
  }

  @override
  void initState() {
    super.initState();
    _fetchWeather(); // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–æ–≥–æ–¥—É –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: Text("–ü–æ–≥–æ–¥–∞ –≤ $_cityName"), centerTitle: true),
      body: Center(
        child: _isLoading
            ? const CircularProgressIndicator() // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É
            : _weather != null
                ? Column(
                    mainAxisAlignment: MainAxisAlignment.center,
                    children: [
                      Text(
                        "${_weather!.temperature.round()}¬∞C",
                        style: const TextStyle(fontSize: 40),
                      ),
                      Text(
                        _weather!.description,
                        style: const TextStyle(fontSize: 20),
                      ),
                    ],
                  )
                : const Text("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ"),
      ),
    );
  }
}

